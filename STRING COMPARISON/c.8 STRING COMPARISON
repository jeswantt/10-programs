#include <stdio.h>

int compare_strings(const char *str1, const char *str2) {
    int i = 0;
    
    // Compare characters of both strings one by one
    while (str1[i] != '\0' && str2[i] != '\0') {
        if (str1[i] < str2[i]) {
            return -1; // str1 is lexicographically less than str2
        } else if (str1[i] > str2[i]) {
            return 1; // str1 is lexicographically greater than str2
        }
        i++;
    }

    // If both strings are of different lengths, determine which one is longer
    if (str1[i] == '\0' && str2[i] != '\0') {
        return -1; // str1 is lexicographically less because str2 is longer
    } else if (str1[i] != '\0' && str2[i] == '\0') {
        return 1; // str1 is lexicographically greater because str1 is longer
    }

    return 0; // Both strings are identical
}

int main() {
    char str1[100], str2[100];

    // Input two strings
    printf("Enter the first string: ");
    fgets(str1, sizeof(str1), stdin);  // Use fgets to handle spaces
    str1[strcspn(str1, "\n")] = 0;  // Remove newline character if fgets adds it

    printf("Enter the second string: ");
    fgets(str2, sizeof(str2), stdin);  // Use fgets to handle spaces
    str2[strcspn(str2, "\n")] = 0;  // Remove newline character if fgets adds it

    // Compare the strings
    int result = compare_strings(str1, str2);

    // Output the result
    if (result == 0) {
        printf("The strings are identical.\n");
    } else if (result < 0) {
        printf("The first string is lexicographically smaller.\n");
    } else {
        printf("The first string is lexicographically greater.\n");
    }

    return 0;
}
